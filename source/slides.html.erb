---
layout: slides
---

<div id="grid">
<% languages.each do |language| %>
  <div class="language">
    <div class="slide">
      <h1>Test Driven Development with <%= language.title %></h1>

      <p>We're going to build a Pig Latin translation library using <%= language.title %>.</p>

      <p>Use your left and right arrow keys to move throught the steps for <%= language.title %>.<p>

      <p>Use your up and down arrow keys to move through the different languages for any step.</p>

    </div>
    <div class="slide">
      <h2><%= language.title %>: Installing Homebrew</h2>

      <p>We're going to start by installing Homebrew which will make installing everything else we need much easier.</p>

      <p>Open a Terminal window and run the following commands:</p>

<% code('bash') do %>
xcode-select --install
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
<% end %>

      <p>Then ensure you have the latest version of Homebrew by typing the following:</p>

<% code('bash') do %>
brew update
<% end %>

      <p>And finally, ensure that Homebrew's environment is in a healthy state:</p>

<% code('bash') do %>
brew doctor
<% end %>

      <p>This may give you some commands to run in order to fix any problems, which you should do before continuing.</p>
    </div>
    <div class="slide">
      <h2><%= language.title %>: Installing <%= language.title %></h2>

      <p>Now we can easily install <%= language.title %> with Homebrew using the following:</p>

<% code('bash') do %>
<%= language.homebrew %>
<% end %>
    </div>
    <div class="slide">
      <h2><%= language.title %>: Creating the Project</h2>

      <p>Now we'll use <%= link_to language.initializer.name, language.initializer.url %> to initialize a project for us.</p>

<% code('bash') do %>
<%= language.initializer.install %>
<%= language.initializer.initialize %>
cd <%= language.project %>
<% end %>
    </div>
    <div class="slide">
      <h2><%= language.title %>: Dependency Management</h2>

      <p>When building software you will frequently use libraries and tools from a third party. Since they have their own development lifecycles and versions we want to be able to define a specific version of that dependency to use in our software. We want to do that with a tool and a file.</p>

      <p>For <%= language.title %> we'll use the tool <%= link_to(language.dependencies.name, language.dependencies.url) %> and our dependencies will be defined in the file <code><%= language.dependencies.file %></code>.</p>

<% code('bash') do %>
<%= language.dependencies.install %>
<% end %>
    </div>
    <div class="slide">
      <h2><%= language.title %>: Adding a Testing Library</h2>

      <p>We're going to use the testing library <%= link_to language.testing.name, language.testing.url %> to write our tests.</p>

      <p>Edit the file <code><%= language.dependencies.file %></code> and add <%= language.testing.name %> as a testing dependency:</p>

<% code('bash') do %>
<%= language.testing.content %>
<% end %>

      <p>Then we retrieve <%= language.testing.name %> by running <code><%= language.dependencies.resolve %></code>.</p>

      <p>Finally we initialize <%= language.testing.name %> by running <code><%= language.testing.initialize %></code>.</p>
    </div>
    <div class="slide">
      <h2><%= language.title %>: The First Test</h2>

      <p>Create the file <code><%= language.first_test.file %></code> with the following contents:</p>

<% code(language.path) do %>
<%= language.first_test.content %>
<% end %>
    </div>
    <div class="slide">
      <h2><%= language.title %>: Run the Test</h2>
      <p>Then run the test with the command <code><%= language.testing.run %></code> to see the results:</p>

<% code('bash') do %>
<%= language.first_test.result %>
<% end %>
    </div>
  </div>
<% end %>
</div>

